.SUFFIXES: .o .cxx
# コンピュータシステム情報(uname)
#	-r	OS release		: 8.7.0
# C++コンパイラ情報(man gcc)
#	path	: g++
#	version	: 4.0.0
# ライブラリ情報を見る方法
#	ar -tv lib.a	: アーカイブ内のファイルリスト
#	nm lib.a	: シンボルテーブルのリスト
#---name-----------------------------------------------------
COMPILE_TYPE = darwin8
READ_INCL =    igs_image_readers.h
WRIT_INCL =    igs_image_writers.h
READ_LIBR = libigs_image_readers.a
WRIT_LIBR = libigs_image_writers.a
READ_SO   = libigs_image_readers.so
WRIT_SO   = libigs_image_writers.so
READ_SRCS =    igs_image_readers.cxx
WRIT_SRCS =    igs_image_writers.cxx
READ_OBJS = $(READ_SRCS:.cxx=.o)
WRIT_OBJS = $(WRIT_SRCS:.cxx=.o)
#DPATH_UTIL = ../../../utility_tools/$(COMPILE_TYPE)
DPATH_UTIL = ${HOME}/utility_tools/$(COMPILE_TYPE)
DPATH_INCL = $(DPATH_UTIL)/include
DPATH_LIBR = $(DPATH_UTIL)/lib
#DPATH_SO = $(DPATH_UTIL)/so
INCS = -I. -I../src_common -I$(DPATH_INCL)
#---command--------------------------------------------------
CC = g++
CC_OPTIONS = $(CXXFLAGS) -Wall -O2 -g $(INCS)
# -fPIC : 位置独立コードを生成する-->使っていない.
AR = ar
AR_OPTIONS = -rvs
# -s : オブジェクトファイルの索引を書き込むか更新する。ranlibと同じ.
LD = g++
# "ld"だと__dso_handleがないといってエラーになる.
LD_OPTIONS = $(LDFLAGS) $(CC_OPTIONS) -shared
# -shared : 共有オブジェクトを生成.
#---action---------------------------------------------------
all: check $(READ_LIBR) $(WRIT_LIBR) cleanobj
check:
	if [ `uname -s` != "Darwin" ] ; then echo "Bad makefile"; exit 1; fi
$(READ_LIBR): $(READ_OBJS)
	$(AR) $(AR_OPTIONS) $@ $?
$(WRIT_LIBR): $(WRIT_OBJS)
	$(AR) $(AR_OPTIONS) $@ $?
#$(READ_SO): $(READ_SRCS)
#	$(LD) $(LD_OPTIONS) -DUSE_IRW_PLUGIN $? -o $@
#$(WRIT_SO): $(WRIT_SRCS)
#	$(LD) $(LD_OPTIONS) -DUSE_IRW_PLUGIN $? -o $@
cleanobj:
	rm -f $(READ_OBJS) $(WRIT_OBJS)
.cxx.o:
	$(CC) $(CC_OPTIONS) -c $<
inst: check
	if [ ! -e $(DPATH_UTIL) ] ; then mkdir $(DPATH_UTIL) ; fi
	if [ ! -e $(DPATH_INCL) ] ; then mkdir $(DPATH_INCL) ; fi
	cp $(READ_INCL) $(DPATH_INCL)
	cp $(WRIT_INCL) $(DPATH_INCL)
	if [ ! -e $(DPATH_LIBR) ] ; then mkdir $(DPATH_LIBR) ; fi
	mv $(READ_LIBR) $(DPATH_LIBR)
	mv $(WRIT_LIBR) $(DPATH_LIBR)
#	if [ ! -e $(DPATH_SO) ] ; then mkdir $(DPATH_SO) ; fi
#	mv $(READ_SO) $(DPATH_SO)
#	mv $(WRIT_SO) $(DPATH_SO)
clean: check
	rm -f $(READ_OBJS) $(WRIT_OBJS)
	rm -f $(READ_LIBR) $(WRIT_LIBR) $(READ_SO) $(WRIT_SO)
